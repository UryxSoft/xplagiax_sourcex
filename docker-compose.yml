version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: academic_search_redis
    # NO exponer puerto al host (solo red interna)
    networks:
      - backend
    volumes:
      - redis_data:/data
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-changeme}
      --appendonly yes
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  app:
    build: .
    container_name: academic_search_app
    ports:
      - "${APP_PORT:-5000}:5000"
    networks:
      - backend
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-changeme}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY:-dev_secret_key_change_in_production}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-*}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - faiss_data:/app/data
      - ./backups:/app/backups
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

networks:
  backend:
    driver: bridge
    internal: false

volumes:
  redis_data:
    driver: local
  faiss_data:
    driver: local